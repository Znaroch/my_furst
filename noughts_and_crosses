import random

N = 4
M = 4
matrix = [
    [" ", 0, 1, 2],
    [0, "-", "-", "-"],
    [1, "-", "-", "-"],
    [2, "-", "-", "-"]
]

list_matrix = sum(matrix, [])

move_player = 'x'
move_computer = '0'


def table():
    for i in range(N):
        for j in range(M):
            print(matrix[i][j], end=" ")
        print()
    return


def player():
    while True:
        x = input("Введи номер строки:")
        y = input("Введи номер столбца:")
        try:
            if matrix[int(x)+1][int(y)+1] == "-":
                matrix[int(x)+1][int(y)+1] = "x"
            elif matrix[int(x)+1][int(y)+1] != "-":
                print('Это поле занято, попробуй другое!')
                continue
        except IndexError:
            print("\n!!! Введи цифры от 0 до 2 (в пределах поля) и не заходя на чужие места!")
            continue
        except ValueError:
            print("\n!!! Введи цифры, буквы или пробелы нельзя!")
            continue
        return

#нужно сделать действия компьютера сильнее и обдуманнее логика такая:

combination_1 = [move_computer, move_computer, "-"]

win1, win2, win3, win4, win5, win6, win7, win8 = [[matrix[1][1], matrix[1][2], matrix[1][3]],
                                                      [matrix[2][1], matrix[2][2], matrix[2][3]],
                                                      [matrix[3][1], matrix[3][2], matrix[3][3]],
                                                      [matrix[1][1], matrix[2][1], matrix[3][1]],
                                                      [matrix[1][2], matrix[2][2], matrix[3][2]],
                                                      [matrix[1][3], matrix[2][3], matrix[3][3]],
                                                      [matrix[1][1], matrix[2][2], matrix[3][3]],
                                                      [matrix[1][3], matrix[2][2], matrix[3][1]]]
all_win = [win1, win2, win3, win4, win5, win6, win7, win8]


def strong_move_comp():
    if any(i == combination_1 for i in all_win):
        return
    else:
        return False


def computer():
    print("Ходит компьютер!")
    strong_move = strong_move_comp()
    while True:
        if strong_move:
            combination_1[2] = "0"
        x = random.randint(1, 3)
        y = random.randint(1, 3)
        if matrix[x][y] == "-":
            matrix[x][y] = "0"
        else:
            continue
        return


def check_win1():
    combination_1 = [move_player, move_player, move_player]
    win1, win2, win3, win4, win5, win6, win7, win8 = [[matrix[1][1], matrix[1][2], matrix[1][3]],
            [matrix[2][1], matrix[2][2], matrix[2][3]],
            [matrix[3][1], matrix[3][2], matrix[3][3]], [matrix[1][1], matrix[2][1], matrix[3][1]],
            [matrix[1][2], matrix[2][2], matrix[3][2]], [matrix[1][3], matrix[2][3], matrix[3][3]],
            [matrix[1][1], matrix[2][2], matrix[3][3]], [matrix[1][3], matrix[2][2], matrix[3][1]]]
    all_win = [win1, win2, win3, win4, win5, win6, win7, win8]
    if any(i == combination_1 for i in all_win):
        return True
    else:
        return False


def check_win2():
    combination_2 = [move_computer, move_computer, move_computer]
    win1, win2, win3, win4, win5, win6, win7, win8 = [[matrix[1][1], matrix[1][2], matrix[1][3]],
            [matrix[2][1], matrix[2][2], matrix[2][3]],
            [matrix[3][1], matrix[3][2], matrix[3][3]], [matrix[1][1], matrix[2][1], matrix[3][1]],
            [matrix[1][2], matrix[2][2], matrix[3][2]], [matrix[1][3], matrix[2][3], matrix[3][3]],
            [matrix[1][1], matrix[2][2], matrix[3][3]], [matrix[1][3], matrix[2][2], matrix[3][1]]]
    all_win = [win1, win2, win3, win4, win5, win6, win7, win8]
    if any(i == combination_2 for i in all_win):
        return True
    else:
        return False


print("Hello! Игра крестики-нолики, будет выглядеть так:")
table()
lottery = random.randint(0, 1)
lottery_proof = int(lottery)
if lottery_proof:
    print('\nПервым ходит комьютер!')
    computer()
    table()
    player()
    table()
else:
    print('\nПервым ходите вы!')
    player()
    table()
    computer()
    table()
while "-" in list_matrix:
    check_player = check_win1()
    check_computer = check_win2()
    if check_player:
        print("Победил Игрок!")
        break
    elif check_computer:
        print("Победил Компьютер!")
        break
    else:
        if lottery_proof:
            computer()
            table()
            player()
            table()
        else:
            player()
            table()
            computer()
            table()
else:
    print('Все поля заняты, игра закончена')



#win = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [3, 5, 7]] комбинации выигрыша


#win_1 = matrix[1][1] == matrix[1][2] == matrix[1][3] == "0"
#win_2 = matrix[2][1] == matrix[2][2] == matrix[2][3] == "0"
#win_3 = matrix[3][1] == matrix[3][2] == matrix[3][3] == "0"
#win_4 = matrix[1][1] == matrix[2][1] == matrix[3][1] == "0"
#win_5 = matrix[1][2] == matrix[2][2] == matrix[3][2] == "0"
#win_6 = matrix[1][3] == matrix[2][3] == matrix[3][3] == "0"
#win_7 = matrix[1][1] == matrix[2][2] == matrix[3][3] == "0"
#win_8 = matrix[1][3] == matrix[2][2] == matrix[3][1] == "0"

#win_9 = matrix[1][1] == matrix[1][2] == matrix[1][3] == "x"
#win_10 = matrix[2][1] == matrix[2][2] == matrix[2][3] == "x"
#win_11 = matrix[3][1] == matrix[3][2] == matrix[3][3] == "x"
#win_12 = matrix[1][1] == matrix[2][1] == matrix[3][1] == "x"
#win_13 = matrix[1][2] == matrix[2][2] == matrix[3][2] == "x"
#win_14 = matrix[1][3] == matrix[2][3] == matrix[3][3] == "x"
#win_15 = matrix[1][1] == matrix[2][2] == matrix[3][3] == "x"
#win_16 = matrix[1][3] == matrix[2][2] == matrix[3][1] == "x"
#all_win1 = [win_1, win_2, win_3, win_4, win_5, win_6, win_7, win_8]
#all_win2 = [win_9, win_10, win_11, win_12, win_13, win_14, win_15, win_16]








